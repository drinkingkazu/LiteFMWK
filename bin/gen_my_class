#!/usr/bin/env python3
import sys, os
if len(sys.argv)<2:
   sys.stderr.write('Usage: %s CLASS_NAME\n\n' % sys.argv[0])
   sys.exit(1)
if not 'MYSW_DIR' in os.environ.keys():
   sys.stderr.write('$MYSW_DIR not defined!\n\n')
   sys.exit(1)
for f in ['GNUmakefile','LinkDef.h']:
   if not f in os.listdir(os.getcwd()):
      sys.stderr.write('Current directory does not appear to be a package (missing %s).\n\n' % f)
      sys.exit(1)

target_dir = os.getcwd()
working_package = target_dir.replace(target_dir[0:target_dir.rfind('/')+1],'')
name=sys.argv[1]
source_dir='%s/bin/tmp' % os.environ['MYSW_DIR']

in_source='%s/empty.cxx' % source_dir
in_header='%s/empty.h' % source_dir

src_list = { in_source   : '%s/%s.cxx' % (target_dir,name),
             in_header   : '%s/%s.h'   % (target_dir,name) }

for src in src_list.keys():
   if os.path.isfile(src_list[src]):
      sys.stderr.write('File already exists: %s\n\n' % src_list[src])
      sys.exit(1)
      
for src in src_list.keys():
   contents=open(src,'r').read()
   contents=contents.replace('EMPTY_CLASS_NAME',name.upper())
   contents=contents.replace('empty_class_name',name.lower())
   contents=contents.replace('Empty_Class_Name',name)
   contents=contents.replace('Shell_User_Name',os.environ['USER'])
   contents=contents.replace('Working_Package',working_package)
   contents=contents.replace('WORKING_PACKAGE',working_package.upper())
   fout=open(src_list[src],'w')
   fout.write(contents)
   fout.close()

# modify LinkDef
contents=open('%s/LinkDef.h' % target_dir, 'r').read().split('\n')
fout=open('%s/LinkDef.h' % target_dir,'w')
for line in contents:
   line=line + '\n'
   if line.find('ADD_NEW_CLASS')>=0:
      line='#pragma link C++ class %s::%s+;\n%s' % (name,working_package,line)
   fout.write(line)

print('\nGenerated the followings under %s.' % target_dir)
for key in src_list.keys():
   print('    %s' % src_list[key])
print('\nTo compile your program, try:')
print('    > make --directory=%s' % target_dir)
print(' OR')
print('    > cd %s; make;' % target_dir)
print('\nTo remove your empty class code, you should remove:')
print('%s/%s.h' % (target_dir,name))
print('%s/%s.cxx' % (target_dir,name))
print('\nFinally remove #pragma statement for your class from')
print('%s/LinkDef.h' % target_dir)
print('\nI let you go now :)\n')
sys.exit(0)
